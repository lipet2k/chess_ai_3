# import pandas as pd
import numpy as np
# import matplotlib.pyplot as plt
from moves import pos_moves
import math
from feature_getter import file_to_arrays

# MIRA
#Input: Board
#Output: Moves

# train it on only wins and losses
# test it on only wins and loss - assess our success

# train it on win/loss/draw
# test it
# output 0.4-0.6 = draw


class logistic_regression:

    def __init__(self):
        self.learning_rate = 0.1

        tuple = file_to_arrays("first10kwhitewins.txt", "first10kblackwins.txt", 25)
        # one item = an array of feature values corresponding to one position
        self.features_set = tuple[1]
        # one item corresponds to one item in feature set
        self.y_results = tuple[0]

        self.iterations = len(self.y_results)

        # one set of weights
        self.weights = [635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 413.3967417627661, 330.25742793381966, 614.9807886918701, 620.0205689530153, 614.9807586040226, 458.7507107277717, 433.55773064188753, 559.5436266826681, 486.479342519069, 635.1399999999977, 342.8865287554461, 635.1399999999977, 635.1399999999977, 176.61358422018927, 635.1399999999977, 284.94745096678287, 635.1399999999977, 632.6203229546453, 488.99089442511473, 499.0704939497126, 380.6551929106256, 635.1399999999977, 395.7756366518592, 609.9413575917564, 635.1399999999977, 635.1399999999977, 630.1027195964039, 478.9169162033696, 635.1399999999977, 632.6204310725477, 635.1399999999977, 451.2118597067595, 635.1399999999977, 635.1399999999977, 630.1027195964662, 620.0217640937802, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1027195965858, 592.306959622437, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.8613991476537, 635.1399999999977, 635.1399999999977, 635.1399999999977, 609.9419925864463, 609.9410613484148, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 589.7823831182984, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 536.8648800387132, 635.1399999999977, 625.0621895547818, 544.4255189099557, 630.1004600829235, 635.1399999999977, 635.1399999999977, 534.3560990091594, 630.1010947773898, 630.1019087345018, 620.0215217204495, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 620.0215217204495, 622.542369416883, 625.0625240930858, 534.3568690335759, 625.0610144803021, 635.1399999999977, 630.1005590922433, 635.1399999999977, 622.5428513536402, 630.1017429565752, 635.1399999999977, 632.6206297335589, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1015171636004, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 463.7947270389299, 635.1399999999977, 630.1009957943626, 529.3047095274397, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.865662284143, 635.1399999999977, 609.9451296609676, 514.1932830035325, 635.1399999999977, 635.1399999999977, 635.1399999999977, 597.3444619106608, 635.1399999999977, 620.0233925300988, 564.5872569183808, 463.7990982410539, 635.1399999999977, 594.8307129854641, 635.1399999999977, 635.1399999999977, 635.1399999999977, 602.3840664940964, 627.582079699566, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 572.1570020735643, 630.1015903087651, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1015903087651, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 360.4872831897898, 635.1399999999977, 635.1399999999977, 468.853944680449, 609.9469848280443, 478.92155470155467, 635.1399999999977, 433.5528714784338, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 609.9485883953048, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1027195983553, 609.952170761243, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.0619595707426, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 609.9466809752221, 620.0250030767509, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.0654391913056, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 617.5078464974657, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 504.1078258924449, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 544.4266654417346, 604.9044842147213, 604.9083707128409, 635.1399999999977, 519.2491608095389, 635.1399999999977, 635.1399999999977, 609.9428304261731, 635.1399999999977, 609.9433097037368, 630.1022829974585, 625.0610144803021, 635.1399999999977, 635.1399999999977, 635.1399999999977, 632.6203916572263, 620.0221047021998, 630.10228299745, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 627.5840206804127, 635.1399999999977, 635.1399999999977, 632.621301084918, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.0654391916356, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 476.4050698220154, 620.0224711642745, 635.1399999999977, 529.3047846761765, 635.1399999999977, 519.2333543654712, 609.9440095837415, 635.1399999999977, 635.1399999999977, 620.022410498459, 625.0620388656264, 635.1399999999977, 635.1399999999977, 609.9517341600695, 529.3289289615109, 635.1399999999977, 635.1399999999977, 630.1009957943626, 635.1399999999977, 635.1399999999977, 635.1399999999977, 582.2484970562577, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1006786665397, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1006786665397, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 544.4280131643397, 632.620265969934, 632.6203229546453, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.8616949881182, 589.784814244445, 635.1399999999977, 612.4610412040573, 287.42820897600706, 635.1399999999977, 388.24618515860453, 614.9907609569073, 587.2648064315639, 635.1399999999977, 594.8220793103919, 541.9048693254383, 635.1399999999977, 476.40398621603737, 277.35682763857534, 408.3839744012978, 539.3852595710237, 408.35501388431595, 569.6228333262328, 614.9807679890548, 504.1090863384496, 315.13312375837745, 604.901282150781, 247.12955958975948, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 609.9451769378667, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 584.7476327655994, 632.6201477403152, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 607.422933027245, 612.4650088431188, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 589.7845651613482, 635.1399999999977, 539.3867404949965, 627.5804614715965, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1002311537761, 635.1399999999977, 604.9019731821427, 635.1399999999977, 635.1399999999977, 579.702660677955, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 594.8221279647742, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 574.6625030623533, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.8613887962462, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 622.5442444949545, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 604.9048395543638, 632.6202412702125, 635.1399999999977, 597.3455872957385, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.8636296855137, 582.2306697288241, 594.8238017254181, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 604.9036244781187, 635.1399999999977, 635.1399999999977, 433.55619010730493, 635.1399999999977, 635.1399999999977, 635.1399999999977, 473.8685816436961, 635.1399999999977, 635.1399999999977, 433.56742863284717, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 587.2733720673612, 620.0230863661146, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 609.945146042491, 609.9437368456029, 635.1399999999977, 635.1399999999977, 620.0224394848437, 635.1399999999977, 599.8666087082115, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 630.1015903087651, 635.1399999999977, 594.8304286623955, 635.1399999999977, 620.023284332169, 635.1399999999977, 622.5434115231274, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 594.8288147109224, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 342.84493220274913, 579.713705556353, 564.5895974064318, 534.3562917980825, 551.9902536469243, 519.2288106459334, 635.1399999999977, 564.5832755430256, 627.5811062691046, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 620.0263812662921, 635.1399999999977, 635.1399999999977, 630.1009053312812, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 612.4630376208049, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 584.7439994975475, 635.1399999999977, 635.1399999999977, 604.9035591474811, 635.1399999999977, 614.9836213251267, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.064565994927, 609.9451769378667, 622.5456569631303, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 599.8638694624563, 625.0614947382436, 635.1399999999977, 594.8254111974297, 635.1399999999977, 635.1399999999977, 614.9864407377079, 635.1399999999977, 609.9464397889273, 473.86977236938935, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 614.9899501020859, 630.1027195983661, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.0654391922001, 620.0259371458176, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 625.0654391920983, 620.0269580480699, 599.8723611066978, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 635.1399999999977, 554.5087147357576, 635.1399999999977, 216.8854422348698, 609.9413335920044, 529.3047846761765, 529.3047846761765, 564.5832755430256, 564.5832755430256, 320.1986415443666, 632.6213010847578, 635.1399999999977]

        self.bias_weight = 1
        print("regression obj initialized")

    def regression(self):
        file = open("regressiondata.txt", "w")
        for iteration in range(self.iterations):
            self.update_weights()
            if iteration % 10 == 0:
                print("iteration " + str(iteration) + "\nbias term: " + str(self.bias_weight) + str(self.weights))
                file.write("iteration " + str(iteration) + "\nbias term: " + str(self.bias_weight) + " " + str(self.weights) + "\n")
        file.close()
    # update all weights (not bias term) for data input
    def update_weights(self):
        new_weights = [0] * 775
        # for each weight
        self.bias_weight = self.bias_weight + self.learning_rate * self.gradient(self.y_results, self.features_set, -1)
        for j in range(len(self.weights)):
            # new weight = old weight + learning rate * derivative of loss func
            new_weights[j] = self.weights[j] + self.learning_rate * self.gradient(self.y_results, self.features_set, j)
        self.weights = new_weights

    # y = set of results
    # features is set of collections of features
    # y[n] is the result of the position represented by features[n]
    def gradient(self, y, features, j):

        total = 0
        for i in range(len(y)):
            corresponding_features = features[i]
            # if j is -1, get gradient for bias term
            if j >= 0:
                multiplier = corresponding_features[j]
            elif j == -1:
                multiplier = 1
            total += y[i] - self.total_sum(self.bias_weight, corresponding_features, self.weights) * multiplier
        return total

    def total_sum(self, bias, features, weights):
        return self.sigmoid(bias + np.dot(features, weights))

    def sigmoid(self, z):
        return 1 / (1 + math.exp(-z))


tester = logistic_regression()
tester.regression()
